#define DECENA A2
#define UNIDAD A1
#define A 13
#define B 10
#define G 11
#define F 12
#define E 9
#define D 8
#define C 7
#define BTN_SUBIR 4
#define BTN_BAJAR 6
#define BTN_RESET 5
int pines[] = {A, B, C, D, E, F, G};
int botones[] = {BTN_SUBIR, BTN_BAJAR, BTN_RESET};
int botonBajar, botonSubir, botonReset;
int contador1 = 0;
void setup()
{
  for(int i=0; i<=6; i++)
  {
    pinMode(pines[i], OUTPUT);
  }
  for(int i=0; i<=2; i++)
  {
    pinMode(botones[i], INPUT_PULLUP);
  }
  pinMode(DECENA, OUTPUT);
  pinMode(UNIDAD, OUTPUT);
  digitalWrite(DECENA, HIGH);
  digitalWrite(UNIDAD, HIGH);
  Serial.begin(9600);
}

void loop()
{
  botonSubir = digitalRead(botones[0]);
  botonBajar = digitalRead(botones[1]);
  botonReset = digitalRead(botones[2]);
  contador1 = gestionBotones(botonSubir, botonBajar, botonReset, contador1);
  if (contador1 > 99)
  {
    contador1 = 0;
  }
  else if (contador1 < 0)
  {
    contador1 = 99;
  }
  printContador(contador1);
  Serial.print("c1  ");
  Serial.println(contador1);
  delay(100);
}

void prendeDigito(int digito)
{
  if (digito == UNIDAD)
  {
    digitalWrite(UNIDAD, LOW);
    digitalWrite(DECENA, HIGH);
    delay(5);
  }
  else if (digito == DECENA)
  {
    digitalWrite(UNIDAD, HIGH);
    digitalWrite(DECENA, LOW);
  	delay(5);
  }
  else
  {
    digitalWrite(UNIDAD, HIGH);
    digitalWrite(DECENA, HIGH);
  	delay(5);
  }
}

void printContador(int contador)
{
  prendeDigito(0);
  prendeCosas(contador/10);
  prendeDigito(DECENA);
  prendeDigito(0);
  prendeCosas(contador - 10*((int)contador / 10));
  prendeDigito(UNIDAD);
}

void prendeCosas(int contador)
{
  int a = pines[0];
  int b = pines[1];
  int c = pines[2];
  int d = pines[3];
  int e = pines[4];
  int f = pines[5];
  int g = pines[6];
  switch(contador)
  {
    case 0:
  		for(int i=0; i<6; i++)
        {
          digitalWrite(pines[i], HIGH);
        }
    	digitalWrite(g, LOW);
        break;
   	case 1:
    	digitalWrite(b, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(a, LOW);
    	digitalWrite(d, LOW);
    	digitalWrite(e, LOW);
    	digitalWrite(f, LOW);
    	digitalWrite(g, LOW);
    	break;
    case 2:
    	digitalWrite(a, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(e, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(f, LOW);
    	digitalWrite(c, LOW);
    	break;
    case 3:
    	digitalWrite(a, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(e, LOW);
    	digitalWrite(f, LOW);
    	break;
    case 4:
    	digitalWrite(f, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, LOW);
    	digitalWrite(e, LOW);
    	digitalWrite(a, LOW);
    	break;
    case 5:
    	digitalWrite(a, HIGH);
    	digitalWrite(f, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(e, LOW);
    	digitalWrite(b, LOW);
    	break;
    case 6:
    	digitalWrite(a, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(f, HIGH);
    	digitalWrite(b, LOW);
    	break;
    case 7:
    	digitalWrite(a, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(g, LOW);
    	digitalWrite(d, LOW);
    	digitalWrite(e, LOW);
    	digitalWrite(f, LOW);
    	break;
    case 8:
    	digitalWrite(a, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(e, HIGH);
    	digitalWrite(f, HIGH);
    	break;
    case 9:
    	digitalWrite(a, HIGH);
    	digitalWrite(b, HIGH);
    	digitalWrite(g, HIGH);
    	digitalWrite(c, HIGH);
    	digitalWrite(d, HIGH);
    	digitalWrite(f, HIGH);
    	digitalWrite(e, LOW);
    	break;
  }
}
int gestionBotones(int boton1, int boton2, int boton3, int contador)
{
  if (boton1 != 1)
  	{
    	contador++;
  	}
  	else if (boton2 != 1)
  	{
    	contador--;
  	}
    else if (boton3 != 1)
    {
      contador = 0;
    }
    if (contador < 0)
    {
      contador = 0;
    }
  return contador;
}

/*TIENE LA CRUZ C++ NO PODES PASAR ARRAYS A FUNCIONES DIOS ME LIBRE Y ME AMPARE

void gestionPrender(int prenderlos[], int apagarlos[])
{
  int prender = sizeof(prenderlos) / sizeof(prenderlos[0]);
  int apagar = sizeof(apagarlos) / sizeof(apagarlos[0]);
  for(int i=0; i < prender; i++)
  {
    digitalWrite(prenderlos[i], HIGH);
  }
  for(int i=0; i < apagar; i++)
  {
    digitalWrite(pines[i], LOW);
  }
}*/
